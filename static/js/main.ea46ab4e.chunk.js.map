{"version":3,"sources":["components/layouts/Navbar.js","components/layouts/Footer.js","components/containers/Assignment1/MyCard.js","components/containers/Assignment1/MyCarousel.js","components/containers/Assignment1/Assignment1.js","actions/types.js","reducers/searchReducer.js","reducers/index.js","store.js","components/Landing.js","components/containers/Sec7_1.20/Restaurant.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","id","Footer","Meta","Card","MyCard","css","styles","cardMeta","hoverable","style","width","border","cover","alt","src","height","padding","title","description","StyleSheet","create","boxShadow","display","justifyContent","MyCarousel","data","carouselContainer","draggable","centerMode","touchThreshold","focusOnSelect","swipeToSlide","slidesToShow","map","elem","textAlign","lineHeight","background","overflow","arr","Assignment1","heading","cardContainer","flexDirection","flexWrap","antCarousel","LOADING","initialState","text","phones","loading","combineReducers","state","action","type","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Landing","to","Restaurant","App","restaurantGrid","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea46ab4e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark mb-5\">\n      {/* <div className=\"navbar-header\">\n        <Link\n          className=\"navbar-brand nav-link text-white text-lg brand-text\"\n          to=\"/\"\n        >\n          Assignment 2\n        </Link>\n        <Link\n          className=\"navbar-brand nav-link text-white text-lg brand-text\"\n          to=\"/\"\n        >\n          Assignment 3\n        </Link> \n      </div>*/}\n      <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\n        <li className=\"nav-item d-inline-block mr-4\">\n          <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-bottom\">\n      <div className=\"col-md-12\">\n        <div className=\"footer p-3 mt-2 text-center bg-dark text-light\">\n          Developed By:{\" \"}\n          <span className=\"text-warning font-weight-normal\">\n            Dhruv Himanshu Patel 1973426\n          </span>\n          , Using <i className=\"fab fa-react\" /> React JS &amp; Redux JS\n          integrated with no external data API\n          {/* <a\n               href=\"http:www.omdbapi.com/\"\n               target=\"_blank\"\n               rel=\"noopener noreferrer\"\n             >\n               OMDB\n             </a> */}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Footer;\n","import { Card } from \"antd\";\nimport { StyleSheet, css } from \"aphrodite-jss\";\nimport React from \"react\";\nconst { Meta } = Card;\n\nconst MyCard = () => {\n  return (\n    <div className={css(styles.cardMeta)}>\n      <Card\n        hoverable={true}\n        style={{ width: 250, border: \"1px solid #e1e1e1\" }}\n        cover={\n          <img\n            alt=\"example\"\n            src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n            width=\"249\"\n            height=\"auto\"\n          />\n        }\n      >\n        <Meta\n          style={{ padding: \"1rem\" }}\n          title=\"Europe Street beat\"\n          description=\"www.instagram.com\"\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default MyCard;\n\nconst styles = StyleSheet.create({\n  cardMeta: {\n    boxShadow: \"5px 5px 5px #e1e1e1\",\n    padding: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport { Carousel } from \"antd\";\nimport MyCard from \"./MyCard\";\nimport { StyleSheet, css } from \"aphrodite-jss\";\nimport \"antd/dist/antd.css\";\n\nfunction onChange(a, b, c) {\n  console.log(a, b, c);\n}\nconst MyCarousel = ({ data }) => {\n  return (\n    <div className={css(styles.carouselContainer)}>\n      <Carousel\n        draggable={true}\n        centerMode={true}\n        touchThreshold={50}\n        focusOnSelect={true}\n        swipeToSlide={true}\n        slidesToShow={5}\n      >\n        {data ? data.map((elem) => elem) : <h1>Loading</h1>}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default MyCarousel;\n\nconst styles = StyleSheet.create({\n  carouselContainer: {\n    boxShadow: \"5px 5px 5px #e1e1e1\",\n    \"& .ant-carousel .slick-slide\": {\n      textAlign: \"center\",\n      height: \"auto\",\n      lineHeight: \"auto\",\n      background: \"#e1e1e1\",\n      overflow: \"hidden\",\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n});\n","import React from \"react\";\nimport Footer from \"../../layouts/Footer\";\nimport Navbar from \"../../layouts/Navbar\";\nimport { StyleSheet, css } from \"aphrodite-jss\";\nimport MyCard from \"./MyCard\";\nimport MyCarousel from \"./MyCarousel\";\nimport \"./index.css\";\n\nconst arr = [\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n  <MyCard />,\n];\nconst Assignment1 = () => {\n  return (\n    <div>\n      <div className={css(styles.heading)}>\n        <h1>Assignment1 March 12 (Design Sell)</h1>\n      </div>\n      {/* <div className={css(styles.cardContainer)}> */}\n\n      <MyCarousel data={arr} />\n      {/* </div> */}\n    </div>\n  );\n};\n\nexport default Assignment1;\n\nconst styles = StyleSheet.create({\n  heading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  cardContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflow: \"auto\",\n    flexWrap: \"wrap\",\n  },\n  antCarousel: {\n    \"& .slick-slide\": {\n      textAlign: \"center\",\n      height: \"160px\",\n      lineHeight: \"160px\",\n      background: \"#364d79\",\n    },\n  },\n});\n","// export const SEARCH_MOVIE = 'SEARCH_MOVIE';\n// export const FETCH_MOVIES = 'FETCH_MOVIES';\n// export const FETCH_MOVIE = 'FETCH_MOVIE';\nexport const LOADING = 'LOADING';\n","import {\n  // SEARCH_MOVIE,\n  // FETCH_MOVIES,\n  // FETCH_MOVIE,\n  LOADING\n} from '../actions/types';\n\nconst initialState = {\n  text: '',\n  phones: [],\n  loading: false,\n  // movie: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    // case SEARCH_MOVIE:\n    //   return {\n    //     ...state,\n    //     text: action.payload,\n    //     loading: false\n    //   };\n    // case FETCH_MOVIES:\n    //   return {\n    //     ...state,\n    //     movies: action.payload,\n    //     loading: false\n    //   };\n    // case FETCH_MOVIE:\n    //   return {\n    //     ...state,\n    //     movie: action.payload,\n    //     loading: false\n    //   };\n    case LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducer';\n\nexport default combineReducers({\n  phones: searchReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n  return (\n    <div>\n      <Link\n        className=\"navbar-brand nav-link text-lg brand-text\"\n        to=\"/assignment/1\"\n      >\n        <h1>Assignment1</h1>\n      </Link>\n      <Link\n        className=\"navbar-brand nav-link text-lg brand-text\"\n        to=\"/restaurant\"\n      >\n        <h1>Section 7 1.20</h1>\n      </Link>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport { StyleSheet, css } from \"aphrodite-jss\";\n\nconst Restaurant = () => {\n  return <div></div>;\n};\n\nexport default Restaurant;\n\nconst styles = StyleSheet.create({\n  restaurantGrid: {\n    display: \"grid\",\n  },\n});\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport Assignment1 from \"./components/containers/Assignment1/Assignment1\";\n\nimport store from \"./store\";\nimport Landing from \"./components/Landing\";\nimport Restaurant from \"./components/containers/Sec7_1.20/Restaurant\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/assignment/1\" component={Assignment1} />\n        <Route path=\"/restaurant\" component={Restaurant} />\n        {/* <Route exact path=\"/movie/:id\" component={Movie} /> */}\n        <Footer />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}